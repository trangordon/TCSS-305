/**Gordon Tran
 * Assignment 3
 * TCSS 305
 */
package model;

import java.util.Map;

// TODO: Auto-generated Javadoc
/**
 * Base for all vehicles in the model. 
 * 
 * @author Gordon Tran
 * @version October 2018
 */
public abstract class AbstractVehicle implements Vehicle {
    
    /** The X value. */
    protected int myX;
    
    /** The Y value. */
    protected int myY;
    
    /** The direction. */
    protected Direction myDir;
    
    /** The starting X value. */
    protected int mySX;
    
    /** The starting Y value. */
    protected int mySY;
    
    /** The starting direction. */
    protected Direction mySDir;
    
    /** Boolean to say if alive or not.*/
    protected boolean myLife = true; 

    /** Death count integer.*/
    protected int myDeathTime;

    /**
     * The constructor for vehicles. 
     * 
     * @param theX starting X coordinate
     * @param theY starting Y coordinate
     * @param theDir Starting direction
     */
    protected AbstractVehicle(final int theX, final int theY, final Direction theDir) {
        myX = theX;
        myY = theY;
        myDir = theDir;
        mySX = theX;
        mySY = theY;
        mySDir = theDir;
    }

    @Override
    public boolean canPass(final Terrain theTerrain, final Light theLight) {
        // TODO Auto-generated method stub
        return false;
    }

    @Override
    public Direction chooseDirection(final Map<Direction, Terrain> theNeighbors) {
        // TODO Auto-generated method stub
        return null;
    }

    @Override
    public void collide(final Vehicle theOther) {
        // TODO Auto-generated method stub
        if (myLife) {
            if (getDeathTime() > ((Vehicle) theOther).getDeathTime()) {
                myLife = false;
                myDeathTime *= 2;
            }
        }
    }

    @Override
    public int getDeathTime() {
        // TODO Auto-generated method stub
        return myDeathTime;
    }

    @Override
    public String getImageFileName() {
        // TODO Auto-generated method stub
        return null;
    }

    /* (non-Javadoc)
     * @see model.AbstractVehicle#getDirection()
     */
    @Override
    public Direction getDirection() {
        // TODO Auto-generated method stub
        return myDir;
    }

    /* (non-Javadoc)
     * @see model.AbstractVehicle#getX()
     */
    @Override
    public int getX() {
        // TODO Auto-generated method stub
        return myX;
    }

    /* (non-Javadoc)
     * @see model.AbstractVehicle#getY()
     */
    @Override
    public int getY() {
        // TODO Auto-generated method stub
        return myY;
    }

    /* (non-Javadoc)
     * @see model.AbstractVehicle#isAlive()
     */
    @Override
    public boolean isAlive() {
        // TODO Auto-generated method stub
        return myLife;
    }

    /* (non-Javadoc)
     * @see model.AbstractVehicle#poke()
     */
    @Override
    public void poke() {
        // TODO Auto-generated method stub
        myDeathTime -= 1;
        myDir = Direction.random();

    }

    /* (non-Javadoc)
     * @see model.AbstractVehicle#reset()
     */
    @Override
    public void reset() {
        // TODO Auto-generated method stub
        myX = mySX;
        myY = mySY;
        myDir = mySDir;
    }

    /* (non-Javadoc)
     * @see model.AbstractVehicle#setDirection(model.Direction)
     */
    @Override
    public void setDirection(final Direction theDir) {
        // TODO Auto-generated method stub
        myDir = theDir;
    }

    /* (non-Javadoc)
     * @see model.AbstractVehicle#setX(int)
     */
    @Override
    public void setX(final int theX) {
        // TODO Auto-generated method stub
        myX = theX;
    }

    /* (non-Javadoc)
     * @see model.AbstractVehicle#setY(int)
     */
    @Override
    public void setY(final int theY) {
        // TODO Auto-generated method stub
        myY = theY;
    }

    /**
     * Returns string of name of vehicle and death timer if dead.
     * 
     * @return "Name" |Timer: "Turns"
     */
    @Override
    public String toString() {
        String buffer = "";
        if (!myLife) {
            buffer = buffer + "|Timer: " + this.getDeathTime();
        }
        return buffer;
    }
}
