package model;

import java.util.Map;

// TODO: Auto-generated Javadoc
/**
 * The Class Human.
 * 
 * @author Gordon Tran
 * @version October 2018
 */
public class Human extends AbstractVehicle implements Vehicle {
    
    /** Dead for this many turns.*/
    private static final int DEATH_TIME = 25;
    
    /**
     * Instantiates a new human.
     *
     * @param theX the the X
     * @param theY the the Y
     * @param theDir the the direction
     */
    public Human(final int theX, final int theY, final Direction theDir) {
        super(theX, theY, theDir);
        myDeathTime = DEATH_TIME;
    }
    
    /**
     * Passes through grass and red or yellow cross walks.
     * 
     * @param theTerrain Terrain type
     * @param theLight Light status
     */
    @Override
    public boolean canPass(final Terrain theTerrain, final Light theLight) {
        // TODO Auto-generated method stub
        if (theTerrain.equals(Terrain.GRASS)) {
            return true;
        }
        if (theTerrain.equals(Terrain.CROSSWALK)) {
            if (theLight.equals(Light.RED) || theLight.equals(Light.YELLOW)) {
                return true; //Only passes through red and yellow cross walks
            }
        }
        return false;
    }

    /**
     * Walks around randomly but stops and goes for cross walks.
     * 
     * @param theNeighbors Map of adjacent tiles
     */
    @Override
    public Direction chooseDirection(final Map<Direction, Terrain> theNeighbors) {
        //Checks for cross walks
        for (Map.Entry<Direction, Terrain> entry : theNeighbors.entrySet()) {
            if (!entry.getKey().equals(myDir.reverse())) {
                if (entry.getValue() == Terrain.CROSSWALK) {
                    return entry.getKey();
                }
            }
        }
        
        //Random
        Direction buffer = Direction.random();
        while (buffer.equals(myDir.reverse())) {
            buffer = Direction.random();
        }
        
        //Reverse Section
        int temp = 0;
        for (Map.Entry<Direction, Terrain> entry : theNeighbors.entrySet()) {
            if (!entry.getKey().equals(myDir.reverse())) {
                if (entry.getValue() != Terrain.GRASS
                                && entry.getValue() != Terrain.CROSSWALK) {
                    temp += 1;
                }
            }
        }
        if (temp == theNeighbors.size() - 1) {
            return myDir.reverse();
        }
        
        return buffer;
    }

    /* (non-Javadoc)
     * @see model.AbstractVehicle#collide(model.Vehicle)
     */
    @Override
    public void collide(final Vehicle theOther) {
        super.collide(theOther);
    }
    
    @Override
    public int getDeathTime() {
        // TODO Auto-generated method stub
        return super.getDeathTime();
    }

    @Override
    public String getImageFileName() {
        // TODO Auto-generated method stub
        if (myLife) {
            return "human.gif";
        }
        return "human_dead.gif";
    }

    @Override
    public Direction getDirection() {
        // TODO Auto-generated method stub
        return super.getDirection();
    }

    @Override
    public int getX() {
        // TODO Auto-generated method stub
        return super.getX();
    }

    @Override
    public int getY() {
        // TODO Auto-generated method stub
        return super.getY();
    }

    @Override
    public boolean isAlive() {
        if (myDeathTime == DEATH_TIME) {
            myLife = true;
        }
        return super.isAlive();
    }

    @Override
    public void poke() {
        // TODO Auto-generated method stub
        super.poke();
    }

    @Override
    public void reset() {
        super.reset();
    }

    @Override
    public void setDirection(final Direction theDir) {
        // TODO Auto-generated method stub
        super.setDirection(theDir);
    }

    @Override
    public void setX(final int theX) {
        // TODO Auto-generated method stub
        super.setX(theX);
    }

    @Override
    public void setY(final int theY) {
        // TODO Auto-generated method stub
        super.setY(theY);
    }

    @Override
    public String toString() {
        String buffer = super.toString();
        buffer = "Human" + buffer;
        return buffer;
    }
    
}
